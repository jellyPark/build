apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.github.jellyPark'

sourceCompatibility = 1.8 // java 8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  mavenLocal()
  jcenter()
}

dependencies {

  //compile 'com.google.guava:guava:18.0'
  compile group: 'org.springframework.boot', name: "spring-boot-starter-web", version: "${springBootVersion}"
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
  compile group: 'org.projectlombok', name: 'lombok', version: '1.16.20'
  compile group: 'org.springframework.data', name: 'spring-data-redis'
  compile group: 'redis.clients', name: 'jedis'
  compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
}

sourceSets {
    api
    impl
}

sourceSets.all { set ->
    def jarTask = task("${set.name}Jar", type: Jar) {
        baseName = "$set.name"
        from set.output
    }

    artifacts {
        archives jarTask
    }
}

jar {
    from sourceSets.api.output
    from sourceSets.impl.output
}


// this step is necessary when installing both jars in the local maven repository
install {
    repositories.mavenInstaller {
		addFilter('api') { artifact, file -> artifact.name.endsWith('api') }
		addFilter('impl') { artifact, file -> artifact.name.endsWith('impl') }
    }
}

buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}